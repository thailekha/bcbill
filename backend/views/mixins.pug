mixin form_input(id, display, type='text', required_input=true)
  .form-group.mb-3
    label.form-label.fw-bold(for=id)= display ? display : id.charAt(0).toUpperCase() + id.slice(1)
    input.form-control(type=type, id=id, name=id, required=required_input, minlength="3")

mixin form_checkbox(id, label)
  .mb-3.form-check
    input.form-check-input(type="checkbox", id=id, name=id)
    label.form-check-label(for=id)= label

mixin form_container(header)
  .container.mt-5
    .row.justify-content-center
      .col-lg-6
        .bg-light.p-4.mb-4
          h2.text-center.mb-4= header
          block

mixin grey_label(id, display)
  label(for=id, style='color: #6f6f6f;')= display ? display : id.charAt(0).toUpperCase() + id.slice(1)

mixin collapsible_card(accordion_id, card_id, heading)
  .card
    div(class="card-header" id="heading" + card_id)
      h5.mb-0
        button(class="btn btn-link btn-block text-left" type="button" data-toggle="collapse" data-target="#collapse" + card_id aria-expanded="false" aria-controls="collapse" + card_id)= heading
    div(id="collapse" + card_id class="collapse" aria-labelledby="heading" + card_id data-parent="#" + accordion_id)
      block

mixin endpoint_verbs_dropdown(id)
  select.form-select(name=id)
    option(value='get') GET
    option(value='post') POST
    option(value='put') PUT
    option(value='delete') DELETE

mixin origin_server_input(server)
  .form-group.mb-3
    label.form-label.fw-bold(for="originServerId") Server
    input.form-control(type=type, id="originServerId", name="originServerId", value=server, disabled)

mixin provider_access_manager(endpoint)
  h6.card-subtitle.mb-2(style='color: #6f6f6f;')= endpoint.verb.toUpperCase() + " /" + endpoint.path
  ul.list-group.list-group-flush
    each grant in endpoint.EndpointAccessGrant
      li.list-group-item.d-flex.justify-content-between(style=`background-color: #D1D1E0;`)
        h6(style='color: #6f6f6f;')= grant.requestedBy
        // states: approve, revoke, re-enable
        if grant.approvedBy
          if grant.revoked
            button.btn.btn-info(type="button") Restore
          else
            button.btn.btn-danger(type="button") Revoke
        else
          button.btn.btn-success(type="button") Approve

mixin flash_messages(messages, alertLevel)
  for message in messages
    div.alert(class=`alert-${alertLevel}`, role='alert', style='word-wrap: break-word;')
      i.fas.fa-exclamation-triangle
      span #{message}

